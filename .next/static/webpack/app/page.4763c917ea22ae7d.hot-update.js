"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/actions/homeActions.tsx":
/*!*****************************************!*\
  !*** ./src/app/actions/homeActions.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchKanjiDetails: function() { return /* binding */ fetchKanjiDetails; },\n/* harmony export */   fetchKanjiLearnt: function() { return /* binding */ fetchKanjiLearnt; },\n/* harmony export */   fetchWords: function() { return /* binding */ fetchWords; }\n/* harmony export */ });\n/* harmony import */ var _firebase_firestore_getAllKanjiLearnt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/firebase/firestore/getAllKanjiLearnt */ \"(app-pages-browser)/./src/firebase/firestore/getAllKanjiLearnt.ts\");\n\nconst fetchKanjiDetails = async (selectedKanji)=>{\n    const response = await fetch(\"https:kanjiapi.dev/v1/kanji/\".concat(selectedKanji));\n    const data = await response.json();\n    //setKanjiDetails(data)\n    if (!response.ok) {\n        throw new Error(\"HTTP error! status: \".concat(response.status));\n    }\n};\nconst fetchWords = async (selectedKanji)=>{\n    const response = await fetch(\"https://kanjiapi.dev/v1/words/\".concat(selectedKanji));\n    const data = await response.json();\n    //setRelatedWords(data)\n    if (!response.ok) {\n        throw new Error(\"HTTP error! status: \".concat(response.status));\n    }\n    return {\n        data\n    };\n};\nconst fetchKanjiLearnt = async ()=>{\n    const { data, error } = await (0,_firebase_firestore_getAllKanjiLearnt__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    // setKanjiList(result);\n    if (error) {\n        throw new Error(\"HTTP error! status: \".concat(error));\n    }\n    return {\n        data\n    };\n//  setDateLength(result.length)\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvYWN0aW9ucy9ob21lQWN0aW9ucy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF1RTtBQUtoRSxNQUFNQyxvQkFBb0IsT0FBTUM7SUFDbkMsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLCtCQUE2QyxPQUFkRjtJQUM1RCxNQUFNRyxPQUFPLE1BQU1GLFNBQVNHLElBQUk7SUFDaEMsdUJBQXVCO0lBQ3ZCLElBQUksQ0FBQ0gsU0FBU0ksRUFBRSxFQUFFO1FBQ2hCLE1BQU0sSUFBSUMsTUFBTSx1QkFBdUMsT0FBaEJMLFNBQVNNLE1BQU07SUFDeEQ7QUFDSixFQUFDO0FBRU0sTUFBTUMsYUFBYSxPQUFNUjtJQUM1QixNQUFNQyxXQUFXLE1BQU1DLE1BQU0saUNBQStDLE9BQWRGO0lBQzlELE1BQU1HLE9BQU8sTUFBTUYsU0FBU0csSUFBSTtJQUNoQyx1QkFBdUI7SUFDdkIsSUFBSSxDQUFDSCxTQUFTSSxFQUFFLEVBQUU7UUFDaEIsTUFBTSxJQUFJQyxNQUFNLHVCQUF1QyxPQUFoQkwsU0FBU00sTUFBTTtJQUN4RDtJQUNBLE9BQU87UUFBQ0o7SUFBSTtBQUNoQixFQUFDO0FBRU0sTUFBTU0sbUJBQW1CO0lBQzVCLE1BQU0sRUFBQ04sSUFBSSxFQUFDTyxLQUFLLEVBQUMsR0FBRyxNQUFNWixpRkFBaUJBO0lBQzdDLHdCQUF3QjtJQUN2QixJQUFJWSxPQUFPO1FBQ1AsTUFBTSxJQUFJSixNQUFNLHVCQUE2QixPQUFOSTtJQUMzQztJQUNBLE9BQU87UUFBQ1A7SUFBSTtBQUNkLGdDQUFnQztBQUNsQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvYWN0aW9ucy9ob21lQWN0aW9ucy50c3g/ODI2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2V0QWxsS2FuamlMZWFybnQgZnJvbSBcIkAvZmlyZWJhc2UvZmlyZXN0b3JlL2dldEFsbEthbmppTGVhcm50XCI7XG5cblxuXG5cbmV4cG9ydCBjb25zdCBmZXRjaEthbmppRGV0YWlscyA9IGFzeW5jKHNlbGVjdGVkS2Fuamk6c3RyaW5nKSA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6a2FuamlhcGkuZGV2L3YxL2thbmppLyR7c2VsZWN0ZWRLYW5qaX1gKVxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAvL3NldEthbmppRGV0YWlscyhkYXRhKVxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gKVxuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IGZldGNoV29yZHMgPSBhc3luYyhzZWxlY3RlZEthbmppOnN0cmluZykgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8va2FuamlhcGkuZGV2L3YxL3dvcmRzLyR7c2VsZWN0ZWRLYW5qaX1gKVxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAvL3NldFJlbGF0ZWRXb3JkcyhkYXRhKVxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gKVxuICAgIH1cbiAgICByZXR1cm4ge2RhdGF9XG59XG5cbmV4cG9ydCBjb25zdCBmZXRjaEthbmppTGVhcm50ID0gYXN5bmMoKSA9PiB7XG4gICAgY29uc3Qge2RhdGEsZXJyb3J9ID0gYXdhaXQgZ2V0QWxsS2FuamlMZWFybnQoKVxuICAgLy8gc2V0S2FuamlMaXN0KHJlc3VsdCk7XG4gICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgc3RhdHVzOiAke2Vycm9yfWApXG4gICAgfVxuICAgIHJldHVybiB7ZGF0YX1cbiAgLy8gIHNldERhdGVMZW5ndGgocmVzdWx0Lmxlbmd0aClcbn0iXSwibmFtZXMiOlsiZ2V0QWxsS2FuamlMZWFybnQiLCJmZXRjaEthbmppRGV0YWlscyIsInNlbGVjdGVkS2FuamkiLCJyZXNwb25zZSIsImZldGNoIiwiZGF0YSIsImpzb24iLCJvayIsIkVycm9yIiwic3RhdHVzIiwiZmV0Y2hXb3JkcyIsImZldGNoS2FuamlMZWFybnQiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/actions/homeActions.tsx\n"));

/***/ })

});